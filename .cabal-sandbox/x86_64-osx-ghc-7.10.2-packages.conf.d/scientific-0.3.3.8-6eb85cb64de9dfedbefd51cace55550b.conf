name: scientific
version: 0.3.3.8
id: scientific-0.3.3.8-6eb85cb64de9dfedbefd51cace55550b
key: scien_5NQHiMKEgH2DOLHdLSFbA2
license: BSD3
maintainer: Bas van Dijk <v.dijk.bas@gmail.com>
homepage: https://github.com/basvandijk/scientific
synopsis: Numbers represented using scientific notation
description:
    @Data.Scientific@ provides a space efficient and arbitrary precision
    scientific number type.
    .
    'Scientific' numbers are represented using
    <http://en.wikipedia.org/wiki/Scientific_notation scientific notation>. It
    uses a coefficient @c :: 'Integer'@ and a base-10 exponent @e :: 'Int'@ (do
    note that since we're using an 'Int' to represent the exponent these numbers
    aren't truly arbitrary precision). A scientific number corresponds to the
    'Fractional' number: @'fromInteger' c * 10 '^^' e@.
    .
    The main application of 'Scientific' is to be used as the target of parsing
    arbitrary precision numbers coming from an untrusted source. The advantages
    over using 'Rational' for this are that:
    .
    * A 'Scientific' is more efficient to construct. Rational numbers need to be
    constructed using '%' which has to compute the 'gcd' of the 'numerator' and
    'denominator'.
    .
    * 'Scientific' is safe against numbers with huge exponents. For example:
    @1e1000000000 :: 'Rational'@ will fill up all space and crash your
    program. Scientific works as expected:
    .
    > > read "1e1000000000" :: Scientific
    > 1.0e1000000000
    .
    * Also, the space usage of converting scientific numbers with huge exponents to
    @'Integral's@ (like: 'Int') or @'RealFloat's@ (like: 'Double' or 'Float')
    will always be bounded by the target type.
category: Data
author: Bas van Dijk
exposed: True
exposed-modules:
    Data.Scientific Data.Text.Lazy.Builder.Scientific
    Data.ByteString.Builder.Scientific
hidden-modules: Math.NumberTheory.Logarithms
trusted: False
import-dirs: /Users/brett/workspace/scottyFun/.cabal-sandbox/lib/x86_64-osx-ghc-7.10.2/scientific-0.3.3.8-5NQHiMKEgH2DOLHdLSFbA2
library-dirs: /Users/brett/workspace/scottyFun/.cabal-sandbox/lib/x86_64-osx-ghc-7.10.2/scientific-0.3.3.8-5NQHiMKEgH2DOLHdLSFbA2
data-dir: /Users/brett/workspace/scottyFun/.cabal-sandbox/share/x86_64-osx-ghc-7.10.2/scientific-0.3.3.8
hs-libraries: HSscientific-0.3.3.8-5NQHiMKEgH2DOLHdLSFbA2
depends:
    array-0.5.1.0-d4206b835b96b5079d918fa1eab1a9a8
    base-4.8.1.0-075aa0db10075facc5aaa59a7991ca2f
    bytestring-0.10.6.0-6e8453cb70b477776f26900f41a5e17a
    deepseq-1.4.1.1-5de90d6c626db2476788444fb08c1eb3
    ghc-prim-0.4.0.0-af16264bc80979d06e37ac63e3ba9a21
    hashable-1.2.3.3-09c4177c49dd46a63f7036317bb17114
    integer-gmp-1.0.0.0-8e0f14d0262184533b417ca1f8b44482
    text-1.2.1.3-2395ef415c1b20175aae83b50060e389
haddock-interfaces: /Users/brett/workspace/scottyFun/.cabal-sandbox/share/doc/x86_64-osx-ghc-7.10.2/scientific-0.3.3.8/html/scientific.haddock
haddock-html: /Users/brett/workspace/scottyFun/.cabal-sandbox/share/doc/x86_64-osx-ghc-7.10.2/scientific-0.3.3.8/html
